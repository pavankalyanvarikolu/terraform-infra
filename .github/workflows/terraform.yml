name: 'Terraform and Security Scanning'

on:
  push:
    branches:
      - main

env:
  TF_VERSION: 1.2.6

jobs:
  terraform:
    name: infrastructure-dev
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESSKEY }}
        aws-secret-access-key: ${{ secrets.AWS_ACCESSKEY_PASSWORD }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: Terraform Init, Format, Validate
      run: |
        terraform init
        terraform fmt -check
        terraform validate -no-color
      
    - name: Terraform Plan
      run: terraform plan --var-file=terraform.tfvars
      
    - name: Terraform Apply
      run: terraform apply --auto-approve --var-file=terraform.tfvars

    - name: Terraform Destroy
      run: terraform destroy --auto-approve

  infrastructure-audit:
    name: infrastructure-audit
    runs-on: ubuntu-latest
    needs: terraform

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Install tfsec
      run: |
        wget -q $(wget -qO- https://api.github.com/repos/aquasecurity/tfsec/releases/latest | grep -o -E "https://[^\"]*linux_amd64.tar.gz") -O tfsec.tar.gz
        tar -xzf tfsec.tar.gz
        sudo install tfsec /usr/local/bin/

    - name: Run tfsec
      run: tfsec . --exclude-downloaded-modules --tfvars-file terraform.tfvars
      continue-on-error: true

    - name: Install Checkov
      run: pip install checkov

    - name: Run Checkov IAC Scan
      run: checkov -d . --framework terraform --download-external-modules true
      continue-on-error: true
